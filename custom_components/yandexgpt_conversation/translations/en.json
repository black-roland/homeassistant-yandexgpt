{
  "config": {
    "step": {
      "user": {
        "data": {
          "folder_id": "Folder ID",
          "api_key": "API key"
        }
      },
      "reconfigure": {
        "data": {
          "folder_id": "Folder ID",
          "api_key": "API key"
        }
      }
    },
    "abort": {
      "reconfigure_successful": "Configuration updated"
    }
  },
  "options": {
    "step": {
      "init": {
        "data": {
          "prompt": "Instructions",
          "llm_hass_api": "Access to devices",
          "chat_model": "Model",
          "enable_server_data_logging": "Server data logging",
          "recommended": "Recommended model settings",
          "model_version": "Version",
          "temperature": "Temperature",
          "asynchronous_mode": "Asynchronous mode",
          "max_tokens": "Maximum tokens to return in response"
        },
        "data_description": {
          "chat_model": "Model descriptions [can be found in the official documentation](https://yandex.cloud/en/docs/foundation-models/concepts/yandexgpt/models#yandexgpt-generation).",
          "prompt": "Instruct how the LLM should respond. This can be a template.",
          "enable_server_data_logging": "Enable logging of requests on Yandex Cloud servers"
        }
      }
    }
  },
  "selector": {
    "llm_hass_api": {
      "options": {
        "none": "No access to devices"
      }
    }
  },
  "services": {
    "generate_image": {
      "name": "Generate image",
      "description": "Turn a prompt into an image",
      "fields": {
        "config_entry": {
          "name": "Config Entry",
          "description": "The config entry to use for this action"
        },
        "seed": {
          "name": "Seed",
          "description": "Generation seed (any number from 0 to 2⁶³-1)"
        },
        "prompt": {
          "name": "Prompt",
          "description": "The text to turn into an image",
          "example": "A photo of a dog"
        },
        "file_name": {
          "name": "File name",
          "description": "Output file path"
        }
      }
    }
  },
  "exceptions": {
    "yandex_cloud_error": {
      "message": "Error talking to Yandex Cloud: {details}"
    },
    "ethics_filter": {
      "message": "The message got blocked by the ethics filter"
    }
  }
}
